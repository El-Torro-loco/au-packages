os: windows
language: bash
env:
  global:
    - au_version=
    - au_push=true
    - au_test_groups=1
    - github_user_repo=$TRAVIS_REPO_SLUG
    - mail_user=YOUR_EMAIL_ACCOUNT_HERE_ENCRYPTED_STRING
    - mail_pass=YOUR_EMAIL_PASSWORD_HERE_ENCRYPTED_STRING
    - mail_server=smtp.gmail.com
    - mail_port=587
    - mail_enablessl=true
before_install:
- git config --global user.email "chocolatey@realdimensions.net"
- git config --global user.name "Chocolatey"
- git config --global core.safecrlf false
- powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine
install:
- powershell 'Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version'
- powershell '$PSVersionTable'
- git --version
- choco --version
- |
  powershell "git clone -q https://github.com/majkinetor/au.git \$Env:TEMP/au
  . \"\$Env:TEMP/au/scripts/Install-AU.ps1\" \$Env:au_version"
- |
  powershell "\"Build info\"
  '  {0,-20} {1}' -f 'SCHEDULED BUILD:', (\$Env:APPVEYOR_SCHEDULED_BUILD -eq 'true')
  '  {0,-20} {1}' -f 'FORCED BUILD:'   , (\$Env:APPVEYOR_FORCED_BUILD    -eq 'true')
  '  {0,-20} {1}' -f 'RE BUILD:'       , (\$Env:APPVEYOR_RE_BUILD        -eq 'true')"
script:
- |
  powershell "\$ErrorActionPreference = 'Continue'
  
  if (\$Env:APPVEYOR_PROJECT_NAME  -like '*test*') { ./test_all.ps1 \"random \$Env:au_test_groups\"; return }
  
  if ( (\$Env:APPVEYOR_SCHEDULED_BUILD -ne 'true') -and (\$Env:APPVEYOR_FORCED_BUILD -ne 'true') ) {
  	switch -regex (\$Env:APPVEYOR_REPO_COMMIT_MESSAGE)
  	{
  		'\[AU (.+?)\]'   { \$forced = \$Matches[1] }
  
  		'\[PUSH (.+?)\]' {
  			\$packages = \$Matches[1] -split ' '
  			Write-Host \"PUSHING PACKAGES: \$packages\"
  			foreach (\$package in \$packages) {
  				Write-Host (\"{0}`n{1}`n\" -f ('-'*60), \"PACKAGE: \$package\")
  				\$package_dir = ls -recurse | ? { \$_.Name -eq \"\$package.nuspec\"} | select -First 1 | % Directory
  				if (!\$package_dir) { Write-Warning \"Can't find package '\$package'\"; continue }
  				pushd \$package_dir
  					if (Test-Path update.ps1 -ea 0) { ./update.ps1 }
  					choco pack; Push-Package;
  				popd
  			}
  			return
  		}
  	}
  }
  
  ./update_all.ps1 -ForcedPackages \$forced
  7z a au_temp.zip \$Env:TEMP\chocolatey\au\*"
